{"mappings":";;;;;;;;;;;;;AAAA;;AAIA,MAAM,4BAAM,GAAG,EAAE,AAAC;IAElB,wCA8BG,GA9BY,IAAI,CAAA,GAAA,+BAAW,CAAA,CAAC;IAC3B,MAAM,SAAS,EAAC,SAAC,KAAK,CAAA,EAAC,EAA2B;QAC9C,MAAM,MAAM,GAAmB;YAAC,KAAK;SAAC,AAAC;QACvC,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,AAAC;QAChC,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC;QACxC,IAAI,QAAQ,CAAC,KAAK,UAAU,EACxB;YAAA,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;gBACtB,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,OAAO,EAAE,AAAC;gBACrC,4BAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpB,MAAM,YAAY,GAAG,CAAA,GAAA,kBAAI,CAAA,CAAC,4BAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,AAAC;gBAC3C,sBAAsB;gBACtB,MAAM,QAAQ,GAAG,CAAC;;;;uCAIK,EAAE,YAAY,CAAC;;gBAEtC,CAAC;gBACD,MAAM,UAAU,GAAG;oBACf,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE,QAAQ;oBACjB,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC;oBAC3B,cAAc,EAAE,QAAQ;iBAC3B;gBACD,aAAa;gBACb,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;aAC1B;SAAA,AACJ;QACD,OAAO,MAAM,CAAC;KACjB;CACJ,CAAC","sources":["src/transformer.ts"],"sourcesContent":["import {Transformer} from \"@parcel/plugin\";\nimport {MutableAsset} from \"@parcel/types\";\nimport {uniq} from \"lodash\";\n\nconst styles = [];\n\nexport default new Transformer({\n    async transform({asset}): Promise<MutableAsset[]> {\n        const assets: MutableAsset[] = [asset];\n        const filePath = asset.filePath;\n        console.log(\"Transforming \" + filePath);\n        if (filePath.match(/\\.vue$/)) {\n            if (asset.type === \"css\") {\n                const source = await asset.getCode();\n                styles.push(source);\n                const joinedStyles = uniq(styles).join(\"\");\n                // language=JavaScript\n                const jsInject = `\n                  const existingStyle = document.querySelector(\"style[data-vue-styles]\");\n                  const style = existingStyle ?? document.createElement('style');\n                  style.setAttribute(\"data-vue-styles\", \"true\");\n                  style.innerHTML += \\`${joinedStyles}\\`;\n                  document.head.appendChild(style);\n                `\n                const newJsAsset = {\n                    type: 'js',\n                    content: jsInject,\n                    uniqueKey: `${asset.id}-js`,\n                    bundleBehavior: 'inline'\n                }\n                // @ts-ignore\n                assets.push(newJsAsset)\n            }\n        }\n        return assets;\n    },\n});\n"],"names":[],"version":3,"file":"transformer.js.map","sourceRoot":"../"}